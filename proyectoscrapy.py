# -*- coding: utf-8 -*-
"""ProyectoScrapy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NW5mnjkw49hBc_FcC9Pn411LLVzgv0R6
"""

import requests
from os import path
from PIL import Image
import numpy as np
import matplotlib.pyplot as plt
from wordcloud import WordCloud, STOPWORDS
from bs4 import BeautifulSoup

print("****************************")
print("*   PROYECTO 1ER PARCIAL   *")
print("****************************")
continuar='1'
while continuar =='1' :
  palabras=""
  codigo = input("¿Ingrese el codigo del usuario que desea scrapear? ")
  res=requests.get("https://es.stackoverflow.com/users/"+codigo)
  print("La página que se va a scrapear es:")
  print("https://es.stackoverflow.com/users/"+codigo)
  soup = BeautifulSoup(res.text,"html.parser")
  allEtiquetas=soup.select("#top-tags > div > div.grid--cell.mt8.mb24.ta-right > a")
  if len(allEtiquetas)>0 :
    urlAllEtiquetas="https://es.stackoverflow.com"+allEtiquetas[0]['href']
    res=requests.get(urlAllEtiquetas)
    soup = BeautifulSoup(res.text,"html.parser")
    tabla=soup.find('table', attrs={'class':'user-tags'})
    etiquetas=tabla.find_all('a', {'class': 'post-tag'})
    votos=tabla.find_all('div', {'class': 'answer-votes'})
    nombre=soup.find('div', {'class':'grid--cell ws-nowrap fs-body3'})
    print("El nombre del usuario scrapeado es: "+ nombre.getText().strip())
    
    for que in etiquetas:
        q=que.getText()
        palabras=palabras+" "+q
    paginacion=soup.find_all('a', {'class':'s-pagination--item js-pagination-item'})
    
    if len(paginacion)>0 :
      nombre=soup.find('div', {'class':'grid--cell fw-bold'})    
      for i in range(int(paginacion[len(paginacion)-2].getText())-1):
        url="https://es.stackoverflow.com"+allEtiquetas[0]['href']+"&sort=votes&page="+str(i+2)
        resPag=requests.get(url)
        soupPag = BeautifulSoup(resPag.text,"html.parser")
        tablaPag=soupPag.find('table', attrs={'class':'user-tags'})
        etiquetasPag=tablaPag.find_all('a', {'class': 'post-tag'})
        votosPag=tablaPag.find_all('div', {'class': 'answer-votes'})
        nombrePag=soupPag.find('div',{'class':'grid--cell fw-bold'})
        for que in etiquetasPag:
          q=que.getText()
          palabras=palabras+" "+q
    else :
      print("El numero de paginas del usuario es 0")
    print(palabras)
    wordcloud = WordCloud().generate(palabras)
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis("off")
    plt.show()
  else :
    div_etiquetas=soup.find('div', {'class':'grid gs8 fd-column profile-top-tags'})
    if div_etiquetas!= None and len(div_etiquetas)>0 :
      etiquetas=div_etiquetas.find_all('a', {'class': 'post-tag'})
      for que in etiquetas:
          q=que.getText()
          palabras=palabras+" "+q
          #print(q)
      print(palabras)
      wordcloud = WordCloud().generate(palabras)
      plt.imshow(wordcloud, interpolation='bilinear')
      plt.axis("off")
      plt.show() 
      
    else :   
        print("El usuario no permite ver sus etiquetas o es incorrecto")
  continuar = input("Presione 1 si desea ingresar otro usuario o cualquier otra tecla para salir ")











